#!/usr/bin/env bash
while true; do
    action=x
    clear
    echo -ne "\n\n ACTION? g(Go to) m(Move to) v(Vol) b(bright)\n k(kbd) t(touchpad):\n    "
    read -r -n 1 action
    clear
    if [[ "$action" = "g" ]]; then
        echo -ne "\n\n    GO TO?  a1 s2 d3 f4 g5 h6 j7 k8 l9:\n\n    "
        read -r -n 1 tag
        case $tag in
            a | 1) workspace=1 ;;
            s | 2) workspace=2 ;;
            d | 3) workspace=3 ;;
            f | 4) workspace=4 ;;
            g | 5) workspace=5 ;;
            h | 6) workspace=6 ;;
            j | 7) workspace=7 ;;
            k | 8) workspace=8 ;;
            *    ) workspace=9 ;;
        esac
        xdotool key Super+$workspace
        clear
    elif [[ "$action" = "m" ]]; then
        echo -ne "\n\n MOVE TO?  a1 s2 d3 f4 g5 h6 j7 k8 l9:\n\n    "
        read -r -n 1 tag
        case $tag in
            a | 1) workspace=1 ;;
            s | 2) workspace=2 ;;
            d | 3) workspace=3 ;;
            f | 4) workspace=4 ;;
            g | 5) workspace=5 ;;
            h | 6) workspace=6 ;;
            j | 7) workspace=7 ;;
            k | 8) workspace=8 ;;
            *    ) workspace=9 ;;
        esac
        xdotool key Super+m
        xdotool key Super+Shift+$workspace
        xdotool key Super+$workspace
        clear
    elif [[ "$action" = "v" ]]; then
        while true; do
            echo -ne "\n\n Change VOL?  j(dec) k(inc) q(quit)\nm(mute) u(unmute):\n    "
            amixer get Master | tail -n 1
            read -r -n 1 change
            if [[ "$change" = "k" ]]; then
                amixer set Master 3+
                #Comment the above line and uncomment the line below
                #to use pulseaudio instead of amixer
                #pactl -- set-sink-volume 0 +3%
                clear
            elif [[ "$change" = "j" ]]; then
                amixer set Master 3-
                #Comment the above line and uncomment the line below
                #to use pulseaudio instead of amixer
                #pactl -- set-sink-volume 0 -3%
                clear
            elif [[ "$change" = "m" ]]; then
                amixer set Master toggle
                clear
            elif [[ "$change" = "u" ]]; then
                alsactl restore
                clear
            elif [[ "$change" != "q" ]]; then
                clear
                continue
            else
                break
            fi
        done
        break
    elif [[ "$action" = "b" ]]; then
        while true; do
            echo -ne "\n\n Change Brightness?  j(dec) k(inc) q(quit):\n\n    "
            brightnessctl g
            read -r -n 1 change
            if [[ "$change" = "k" ]]; then
                brightnessctl set 3%+
                clear
            elif [[ "$change" = "j" ]]; then
                brightnessctl set 3%-
                clear
            elif [[ "$change" != "q" ]]; then
                clear
                continue
            else
                break
            fi
        done
        break
    elif [[ "$action" = "k" ]]; then
        while true; do
            echo -ne "\n\n Keyboard Backlight?  j(dec) k(inc) q(quit):\n\n    "
            brightnessctl g --device="$(find /sys/class/leds -name *kdb*)"
            read -r -n 1 change
            if [[ "$change" = "k" ]]; then
                brightnessctl --device="$(find /sys/class/leds -name *kdb*)" set 1+
                clear
            elif [[ "$change" = "j" ]]; then
                brightnessctl --device="$(find /sys/class/leds -name *kdb*)" set 1-
                clear
            elif [[ "$change" != "q" ]]; then
                clear
                continue
            else
                break
            fi
        done
        break
    elif [[ "$action" = "t" ]]; then
        toggle_touchpad
        break
    elif [[ "$action" = "q" ]]; then
        break
    else
        echo -ne "\n\n BAD CHOICE"
        sleep 1
    fi
done
